{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","target","Projects","projects","showLink","Title","project","to","Hero","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","data","allStrapiProjects","Layout"],"mappings":"0rBAuCeA,EAnCC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjE,OACC,6BAASC,UAAU,WACjBF,GAAS,kBAAC,IAAD,CAAOG,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,gBAC/D,yBAAKA,UAAU,gBACd,0BAAMA,UAAU,kBAAhB,IAAmCD,EAAQ,EAA3C,KACA,4BAAKL,GACL,uBAAGM,UAAU,gBAAgBP,GAC7B,yBAAKO,UAAU,iBACbJ,EAAMO,KAAI,SAACC,GACX,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKV,WAGnC,yBAAKM,UAAU,iBACd,uBAAGO,KAAMZ,EAAQa,OAAO,UACvB,kBAAC,IAAD,CAAgBR,UAAU,kBAE3B,uBAAGO,KAAMV,EAAKW,OAAO,UACpB,kBAAC,IAAD,CAAeR,UAAU,sB,YCAhBS,IAlBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUhB,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACpC,OACC,6BAASX,UAAU,oBAClB,kBAACY,EAAA,EAAD,CAAOlB,MAAOA,IACd,yBAAKM,UAAU,kCACbU,EAASP,KAAI,SAACU,EAASd,GACvB,OAAO,kBAAC,EAAD,eAASM,IAAKQ,EAAQP,GAAIP,MAAOA,GAAWc,QAGpDF,GACA,kBAAC,IAAD,CAAMG,GAAG,YAAYd,UAAU,kBAA/B,e,wJCYWe,EApBF,WACZ,OACC,4BAAQf,UAAU,QACjB,yBAAKA,UAAU,8BACd,6BAASA,UAAU,aAClB,6BACC,yBAAKA,UAAU,cACf,yCACA,iDACA,kBAAC,IAAD,CAAMc,GAAG,WAAWd,UAAU,OAA9B,cAGA,kBAAC,IAAD,W,2BCbK,IAMA,IAMA,I,qBCqDIgB,EA/CF,WACZ,IACgCC,EADtB,OACFC,cAAiBC,MAFP,EAGUC,IAAMC,SAAS,GAAnCC,EAHU,KAGHC,EAHG,OAIwBN,EAAKK,GAAvCE,EAJU,EAIVA,QAASC,EAJC,EAIDA,SAAUC,EAJT,EAISA,KAAMC,EAJf,EAIeA,KAEjC,OACC,6BAAS3B,UAAU,gBAClB,kBAACY,EAAA,EAAD,CAAOlB,MAAM,eACb,yBAAKM,UAAU,eAEd,yBAAKA,UAAU,iBACbiB,EAAKd,KAAI,SAACC,EAAML,GAChB,OACC,4BACCM,IAAKD,EAAKwB,SACVC,QAAS,kBAAMN,EAASxB,IACxBC,UAAS,YAAaD,IAAUuB,GAAS,eAExClB,EAAKoB,aAOV,6BAASxB,UAAU,YAClB,4BAAKyB,GACL,4BAAKD,GACL,uBAAGxB,UAAU,YAAY0B,GACxBC,EAAKxB,KAAI,SAACC,GACV,OACC,yBAAKC,IAAKD,EAAKE,GAAIN,UAAU,YAC5B,kBAAC,IAAD,CAAoBA,UAAU,aAC9B,2BAAII,EAAK0B,YAMd,kBAAC,IAAD,CAAMhB,GAAG,SAASd,UAAU,kBAA5B,e,YCzCU+B,G,UAXE,sBAAe,IACOrB,EADR,EAAXsB,KACTC,kBAAqBd,MAC7B,OACC,kBAACe,EAAA,EAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACzB,EAAA,EAAD,CAAUC,SAAUA,EAAUhB,MAAM,oBAAoBiB,UAAQ,MAKjD,e","file":"component---src-pages-index-js-8f7b6272a00df313eabd.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from 'gatsby-image';\nimport { FaGithubSquare, FaShareSquare } from 'react-icons/fa';\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n\treturn (\n\t\t<article className=\"project\">\n\t\t\t{image && <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />}\n\t\t\t<div className=\"project-info\">\n\t\t\t\t<span className=\"project-number\">0{index + 1}.</span>\n\t\t\t\t<h3>{title}</h3>\n\t\t\t\t<p className=\"project-desc\">{description}</p>\n\t\t\t\t<div className=\"project-stack\">\n\t\t\t\t\t{stack.map((item) => {\n\t\t\t\t\t\treturn <span key={item.id}>{item.title}</span>;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"project-links\">\n\t\t\t\t\t<a href={github} target=\"_blank\">\n\t\t\t\t\t\t<FaGithubSquare className=\"project-icon\" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={url} target=\"_blank\">\n\t\t\t\t\t\t<FaShareSquare className=\"project-icon\" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nProject.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tgithub: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired,\n\tdescription: PropTypes.string.isRequired,\n\timage: PropTypes.object.isRequired,\n\tstack: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Project;\n","import React from 'react';\nimport Title from './Title';\nimport Project from './Project';\nimport { Link } from 'gatsby';\nconst Projects = ({ projects, title, showLink }) => {\n\treturn (\n\t\t<section className=\"section projects\">\n\t\t\t<Title title={title} />\n\t\t\t<div className=\"section-center projects-center\">\n\t\t\t\t{projects.map((project, index) => {\n\t\t\t\t\treturn <Project key={project.id} index={index} {...project} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{showLink && (\n\t\t\t\t<Link to=\"/projects\" className=\"btn center-btn\">\n\t\t\t\t\tprojects\n\t\t\t\t</Link>\n\t\t\t)}\n\t\t</section>\n\t);\n};\n\nexport default Projects;\n","import React from 'react';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport SocialLinks from '../constants/socialLinks';\n\nconst Hero = () => {\n\treturn (\n\t\t<header className=\"hero\">\n\t\t\t<div className=\"section-center hero-center\">\n\t\t\t\t<article className=\"hero-info\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"underline\" />\n\t\t\t\t\t\t<h1>I'm Aidar</h1>\n\t\t\t\t\t\t<h4>Software Engineer</h4>\n\t\t\t\t\t\t<Link to=\"/contact\" className=\"btn\">\n\t\t\t\t\t\t\tContact me\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<SocialLinks />\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Hero;\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from 'react';\nimport Title from './Title';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Link } from 'gatsby';\n\nconst query = graphql`\n\t{\n\t\tallStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n\t\t\tnodes {\n\t\t\t\tstrapiId\n\t\t\t\tcompany\n\t\t\t\tdate\n\t\t\t\tposition\n\t\t\t\tdesc {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Jobs = () => {\n\tconst data = useStaticQuery(query);\n\tconst { allStrapiJobs: { nodes: jobs } } = data;\n\tconst [ value, setValue ] = React.useState(0);\n\tconst { company, position, date, desc } = jobs[value];\n\n\treturn (\n\t\t<section className=\"section jobs\">\n\t\t\t<Title title=\"experience\" />\n\t\t\t<div className=\"jobs-center\">\n\t\t\t\t{/* btn container*/}\n\t\t\t\t<div className=\"btn-container\">\n\t\t\t\t\t{jobs.map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={item.strapiId}\n\t\t\t\t\t\t\t\tonClick={() => setValue(index)}\n\t\t\t\t\t\t\t\tclassName={`job-btn ${index === value && 'active-btn'}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.company}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t{/* job info */}\n\t\t\t\t<article className=\"job-info\">\n\t\t\t\t\t<h3>{position}</h3>\n\t\t\t\t\t<h4>{company}</h4>\n\t\t\t\t\t<p className=\"job-date\">{date}</p>\n\t\t\t\t\t{desc.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={item.id} className=\"job-desc\">\n\t\t\t\t\t\t\t\t<FaAngleDoubleRight className=\"job-icon\" />\n\t\t\t\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t\t<Link to=\"/about\" className=\"btn center-btn\">\n\t\t\t\tmore info\n\t\t\t</Link>\n\t\t</section>\n\t);\n};\n\nexport default Jobs;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Hero from '../components/Hero';\nimport Services from '../components/Services';\nimport Jobs from '../components/Jobs';\nimport Projects from '../components/Projects';\nimport Blogs from '../components/Blogs';\n/* Image\n  \n */\nexport default ({ data }) => {\n\tconst { allStrapiProjects: { nodes: projects } } = data;\n\treturn (\n\t\t<Layout>\n\t\t\t<Hero />\n\t\t\t<Jobs />\n\t\t\t<Projects projects={projects} title=\"featured projects\" showLink />\n\t\t</Layout>\n\t);\n};\n\nexport const query = graphql`\n\t{\n\t\tallStrapiProjects(filter: { featured: { eq: true } }, sort: { fields: strapiId, order: DESC }) {\n\t\t\tnodes {\n\t\t\t\tgithub\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}